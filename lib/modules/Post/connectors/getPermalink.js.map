{"version":3,"sources":["../../../../src/modules/Post/connectors/getPermalink.js"],"names":["maybeGetPermalink","self","permalink","Promise","resolve","getOption","maybeFetchCategory","post","indexOf","getPostTerms","id","then","cats","length","categories","sort","catA","catB","term_id","category_object","category","slug","getTermParentsList","parent","termParentsList","reduce","acc","val","default_category_id","getTerm","default_category","maybeFetchAuthor","getUser","post_author","author_data","user_nicename","getPermalink","leavename","rewritecode","promises","all","res","author","date","post_date","split","rewritereplace","post_name","i","replace","home"],"mappings":"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","file":"getPermalink.js","sourcesContent":["import dateformat from 'dateformat'\r\n\r\nexport default function () {\r\n  function maybeGetPermalink(self, permalink) {\r\n    return permalink ? Promise.resolve(permalink) : self.getOption('permalink_structure')\r\n  }\r\n\r\n  function maybeFetchCategory(self, post, permalink) {\r\n    if (permalink.indexOf('%category%') === -1)\r\n      return Promise.resolve('')\r\n    \r\n    return self.getPostTerms(post.id)\r\n      .then(cats => {\r\n        if(cats.length) {\r\n          const categories = cats.sort((catA, catB) => catA.term_id > catB.term_id)\r\n          const category_object = categories[0]\r\n          let category = category_object.slug\r\n          return self.getTermParentsList(category_object.parent)\r\n            .then((termParentsList) => {\r\n              if (termParentsList.length) {\r\n                category = termParentsList.reduce((acc, val) => acc + val.slug + '/', '') + category\r\n              }\r\n              return category || ''\r\n            })\r\n        } else {\r\n          return self.getOption('default_category')\r\n            .then((default_category_id) => {\r\n              return self.getTerm(default_category_id)\r\n            })\r\n            .then(default_category => {\r\n              return default_category.slug || ''\r\n            })\r\n        }\r\n      })\r\n  }\r\n\r\n  function maybeFetchAuthor(self, post, permalink) {\r\n    if (permalink.indexOf('%author%') === -1)\r\n      return Promise.resolve('')\r\n    \r\n    return self.getUser(post.post_author)\r\n      .then(author_data => author_data.user_nicename)\r\n  }\r\n\r\n  return function getPermalink(post, { leavename, permalink }){\r\n    const self = this\r\n\r\n    const rewritecode = [\r\n      '%year%',\r\n      '%monthnum%',\r\n      '%day%',\r\n      '%hour%',\r\n      '%minute%',\r\n      '%second%',\r\n      leavename? '' : '%postname%',\r\n      '%post_id%',\r\n      '%category%',\r\n      '%author%',\r\n      leavename? '' : '%pagename%',\r\n    ]\r\n\r\n    if (!post.id) {\r\n      return false\r\n    }\r\n\r\n    return maybeGetPermalink(self, permalink)\r\n      .then(function(permalink) {\r\n        const promises = [\r\n          maybeFetchCategory(self, post, permalink),\r\n          maybeFetchAuthor(self, post, permalink)\r\n        ]\r\n\r\n        return Promise.all(promises)\r\n          .then(res => [permalink, ...res])\r\n      })\r\n      .then(function([permalink, category, author]) {\r\n        let date = dateformat(post.post_date, 'yyyy mm dd HH MM ss').split(' ')\r\n\r\n        let rewritereplace = [\r\n          date[0],\r\n          date[1],\r\n          date[2],\r\n          date[3],\r\n          date[4],\r\n          date[5],\r\n          post.post_name,\r\n          post.id,\r\n          category,\r\n          author,\r\n          post.post_name\r\n        ]\r\n\r\n        permalink = rewritecode.reduce((acc, val, i) => acc = acc.replace(rewritecode[i], rewritereplace[i]), permalink)\r\n        \r\n        return self.getOption('home')\r\n          .then(home => home + permalink)\r\n      })\r\n  }\r\n}"]}